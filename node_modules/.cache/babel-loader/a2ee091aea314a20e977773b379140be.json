{"ast":null,"code":"var _jsxFileName = \"D:\\\\MarvelApp-main\\\\MarvelApp-main2\\\\src\\\\Components\\\\EventDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Apiservice from \"../ApiService/Apiservice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [comics, setComics] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      setLoading(true);\n\n      try {\n        console.log(`Fetching details for event ID: ${id}`); // Debugging line\n\n        const [eventResponse, comicsResponse, charactersResponse] = await Promise.all([Apiservice.GetEventById(id), Apiservice.GetEventComics(id), Apiservice.GetEventCharacters(id)]);\n        console.log(\"Event Response:\", eventResponse); // Debugging line\n\n        console.log(\"Comics Response:\", comicsResponse); // Debugging line\n\n        console.log(\"Characters Response:\", charactersResponse); // Debugging line\n\n        setEvent(eventResponse.data.data.results[0]);\n        setComics(comicsResponse.data.data.results);\n        setCharacters(charactersResponse.data.data.results);\n      } catch (err) {\n        console.error(\"Error fetching event details:\", err); // Log error\n\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEventDetails();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading event details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details\",\n    children: event && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description || \"No description available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comics.length > 0 ? comics.map(comic => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/comics/${comic.id}`,\n            children: comic.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, comic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No comics available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: characters.length > 0 ? characters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/characters/${character.id}`,\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No characters available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventDetails, \"u2DeGB/0o2O3sIPzKdZYSluPP7k=\", false, function () {\n  return [useParams];\n});\n\n_c = EventDetails;\nexport default EventDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Apiservice","EventDetails","id","event","setEvent","comics","setComics","characters","setCharacters","loading","setLoading","error","setError","fetchEventDetails","console","log","eventResponse","comicsResponse","charactersResponse","Promise","all","GetEventById","GetEventComics","GetEventCharacters","data","results","err","message","title","description","length","map","comic","character","name"],"sources":["D:/MarvelApp-main/MarvelApp-main2/src/Components/EventDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Apiservice from \"../ApiService/Apiservice\";\r\n\r\nconst EventDetails = () => {\r\n  const { id } = useParams();\r\n  const [event, setEvent] = useState(null);\r\n  const [comics, setComics] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEventDetails = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log(`Fetching details for event ID: ${id}`); // Debugging line\r\n        const [eventResponse, comicsResponse, charactersResponse] =\r\n          await Promise.all([\r\n            Apiservice.GetEventById(id),\r\n            Apiservice.GetEventComics(id),\r\n            Apiservice.GetEventCharacters(id),\r\n          ]);\r\n\r\n        console.log(\"Event Response:\", eventResponse); // Debugging line\r\n        console.log(\"Comics Response:\", comicsResponse); // Debugging line\r\n        console.log(\"Characters Response:\", charactersResponse); // Debugging line\r\n\r\n        setEvent(eventResponse.data.data.results[0]);\r\n        setComics(comicsResponse.data.data.results);\r\n        setCharacters(charactersResponse.data.data.results);\r\n      } catch (err) {\r\n        console.error(\"Error fetching event details:\", err); // Log error\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEventDetails();\r\n  }, [id]);\r\n\r\n  if (loading) return <p>Loading event details...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"event-details\">\r\n      {event && (\r\n        <>\r\n          <h1>{event.title}</h1>\r\n          <p>{event.description || \"No description available\"}</p>\r\n          <h2>Comics</h2>\r\n          <ul>\r\n            {comics.length > 0 ? (\r\n              comics.map((comic) => (\r\n                <li key={comic.id}>\r\n                  <Link to={`/comics/${comic.id}`}>{comic.title}</Link>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li>No comics available</li>\r\n            )}\r\n          </ul>\r\n          <h2>Characters</h2>\r\n          <ul>\r\n            {characters.length > 0 ? (\r\n              characters.map((character) => (\r\n                <li key={character.id}>\r\n                  <Link to={`/characters/${character.id}`}>\r\n                    {character.name}\r\n                  </Link>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li>No characters available</li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}